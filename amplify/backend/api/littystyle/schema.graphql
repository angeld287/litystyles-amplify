type Company
    @model
    @auth(rules: [
        # Defaults to use the "owner" field.
        { allow: owner },

        # Roles users can access any operation.
        { allow: groups, groups: ["admin"] },
        #{ allow: groups, groups: ["secretary"], operations: [read] },
        #{ allow: groups, groups: ["client"], operations: [read] }
    ]) {
    id: ID!
    offices: [Office] @connection
    services: [Service] @connection
    products: [Product] @connection
    deleted: Boolean
    deletedAt: String
    createdAt: String
}

type Office
    @model
    @auth(rules: [
        # Defaults to use the "owner" field.
        { allow: owner },

        # Roles users can access any operation.
        { allow: groups, groups: ["admin"] },
    ]) {
    id: ID!
    employees: [Employee] @connection
    location: String!
    deleted: Boolean
    deletedAt: String
    createdAt: String
}

type Service
    @model
    @auth(rules: [
        # Defaults to use the "owner" field.
        { allow: owner },

        # Roles users can access any operation.
        { allow: groups, groups: ["admin"] },
    ]) {
    id: ID!
    name: String
    cost: String
    deleted: Boolean
    deletedAt: String
    createdAt: String
}

type Product
    @model
    @auth(rules: [
        # Defaults to use the "owner" field.
        { allow: owner },

        # Roles users can access any operation.
        { allow: groups, groups: ["admin"] },
    ]) {
    id: ID!
    name: String
    cost: String
    deleted: Boolean
    deletedAt: String
    createdAt: String
}

type Employee
    @model
    @auth(rules: [
        # Defaults to use the "owner" field.
        { allow: owner },

        # Roles users can access any operation.
        { allow: groups, groups: ["admin"] },
    ]) {
    id: ID!
    name: String
    deleted: Boolean
    deletedAt: String
    createdAt: String
}

enum State { IN_PROCESS FINISHED CANCELED ON_HOLD }

type Request
    @model
    @auth(rules: [
        # Defaults to use the "owner" field.
        { allow: owner },

        # Roles users can access any operation.
        { allow: groups, groups: ["admin"] },
    ]) {
    id: ID!
    remposible: [Employee] @connection
    customerName: String!
    service: Service @connection
    product: Product @connection
    state: State
    deleted: Boolean
    deletedAt: String
    createdAt: String
}